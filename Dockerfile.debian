# syntax=docker/dockerfile:1.4

# Use an argument to specify the base image version
ARG DEBIAN_VERSION=bullseye-slim

FROM debian:${DEBIAN_VERSION} as build-environment

ARG TARGETARCH
WORKDIR /opt

# Install necessary packages
RUN apt-get update && apt-get install -y \
    clang \
    lld \
    curl \
    build-essential \
    binutils \
    git \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Install Rust using rustup
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rustup.sh \
    && chmod +x ./rustup.sh \
    && ./rustup.sh -y

# Adjust CFLAGS for ARM64 architecture if needed
RUN if [ "$TARGETARCH" = "arm64" ]; then \
    echo "export CFLAGS=-mno-outline-atomics" >> $HOME/.profile; \
fi

# Set the PATH to include Cargo binaries
ENV PATH="/root/.cargo/bin:${PATH}"

WORKDIR /opt/foundry
COPY . .

# Fix for the Foundry issue #7925
RUN git update-index --force-write-index

# Build the project using cargo
RUN --mount=type=cache,target=/root/.cargo/registry \
    --mount=type=cache,target=/root/.cargo/git \
    --mount=type=cache,target=/opt/foundry/target \
    . $HOME/.profile && cargo build --release --features foundry-cast/aws-kms,forge/aws-kms \
    && mkdir out \
    && mv target/release/forge out/forge \
    && mv target/release/cast out/cast \
    && mv target/release/anvil out/anvil \
    && mv target/release/chisel out/chisel \
    && strip out/*

# Use the same base image for the final stage
FROM debian:${DEBIAN_VERSION} as foundry-client

# Install runtime dependencies
RUN apt-get update && apt-get install -y ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Copy the built binaries
COPY --from=build-environment /opt/foundry/out/forge /usr/local/bin/forge
COPY --from=build-environment /opt/foundry/out/cast /usr/local/bin/cast
COPY --from=build-environment /opt/foundry/out/anvil /usr/local/bin/anvil
COPY --from=build-environment /opt/foundry/out/chisel /usr/local/bin/chisel

# Add a non-root user
RUN adduser --disabled-password --gecos '' --uid 1000 foundry

ENTRYPOINT ["/bin/sh", "-c"]

# Labels
LABEL org.label-schema.build-date=$BUILD_DATE \
      org.label-schema.name="Foundry" \
      org.label-schema.description="Foundry" \
      org.label-schema.url="https://getfoundry.sh" \
      org.label-schema.vcs-ref=$VCS_REF \
      org.label-schema.vcs-url="https://github.com/foundry-rs/foundry.git" \
      org.label-schema.vendor="Foundry-rs" \
      org.label-schema.version=$VERSION \
      org.label-schema.schema-version="1.0"
